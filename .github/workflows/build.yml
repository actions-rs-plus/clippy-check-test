# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  checks: write
  contents: read

concurrency:
  # each new commit to a PR runs this workflow
  # so we need to avoid a long running older one from overwriting the "pr-<number>-latest"
  group: "${{ github.workflow }} @ ${{ github.ref_name }}"

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny=warnings

jobs:
  cargo-clippy-and-report:
    name: Cargo clippy (and report)
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on:
          - ubuntu-latest
          - windows-latest
    if: |
      github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          show-progress: false

      - name: Set up toolchain
        shell: bash
        run: |
          rm ${HOME}/.cargo/bin/cargo-fmt
          rm ${HOME}/.cargo/bin/rust-analyzer
          rm ${HOME}/.cargo/bin/rustfmt

          rustup self update
          rustup update
          rustup show active-toolchain || rustup toolchain install
          rustup show

          cargo --version

      - name: Run Clippy for GitHub Actions report
        uses: actions-rs-plus/clippy-check@0d83844d8ff1a67b11d384d9dd6adcdcf142a8a7 # v2.2.1
        with:
          args: --workspace --all-targets --all-features

  all-done:
    name: All done
    # this is the job that should be marked as required on GitHub. It's the only one that'll reliably trigger
    # when any upstream fails: success
    # when all upstream skips: pass
    # when all upstream success: success
    # combination of upstream skip and success: success
    runs-on: ubuntu-latest
    needs:
      - cargo-clippy-and-report
    if: |
      always()
    steps:
      - name: Fail!
        shell: bash
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: |
          echo "One / more upstream failed or was cancelled. Failing job..."

          exit 1

      - name: Success!
        shell: bash
        run: |
          echo "Great success!"
